# pylint: disable=line-too-long, missing-function-docstring, missing-module-docstring, too-many-arguments

import pytest
import numpy as np

from metatlas.datastructures import metatlas_dataset as mads


@pytest.fixture(name="ms1_summary")
def fixture_ms1_summary():
    return {
        "num_ms1_datapoints": 85.0,
        "mz_peak": 252.1092987060547,
        "rt_peak": 2.2775044441223145,
        "mz_centroid": 252.10915042669814,
        "rt_centroid": 2.218492414487913,
        "peak_height": 304761.90625,
        "peak_area": 7696977.46875,
    }


@pytest.fixture(name="msms")
def fixture_msms():
    return {
        "data": {
            "mz": np.array([], dtype=np.float64),
            "i": np.array([], dtype=np.float64),
            "rt": np.array([], dtype=np.float64),
            "polarity": np.array([], dtype=np.float64),
            "precursor_MZ": np.array([], dtype=np.float64),
            "precursor_intensity": np.array([], dtype=np.float64),
            "collision_energy": np.array([], dtype=np.float64),
        }
    }


@pytest.fixture(name="groups_controlled_vocab")
def fixture_groups_controlled_vocab():
    return ["QC", "InjBl", "ISTD"]


@pytest.fixture(name="metatlas_dataset")
def fixture_metatlas_dataset(mocker, df_container, analysis_ids, groups_controlled_vocab, atlas, lcmsrun):
    mocker.patch(
        "metatlas.io.metatlas_get_data_helper_fun.df_container_from_metatlas_file", return_value=df_container
    )
    mocker.patch("metatlas.plots.dill2plots.get_metatlas_files", return_value=[lcmsrun])
    return mads.MetatlasDataset(analysis_ids, atlas, groups_controlled_vocab)


@pytest.fixture(name="metatlas_dataset_with_2_cids")
def fixture_metatlas_dataset_with_2_cids(
    mocker, df_container, analysis_ids, groups_controlled_vocab, atlas_with_2_cids, lcmsrun
):
    mocker.patch(
        "metatlas.io.metatlas_get_data_helper_fun.df_container_from_metatlas_file", return_value=df_container
    )
    mocker.patch("metatlas.plots.dill2plots.get_metatlas_files", return_value=[lcmsrun])
    return mads.MetatlasDataset(analysis_ids, atlas_with_2_cids, groups_controlled_vocab)


@pytest.fixture(name="eic")
def fixture_eic():
    return {
        "mz": [
            252.1089324951172,
            252.10943603515625,
            252.10926818847656,
            252.109375,
            252.10923767089844,
            252.10910034179688,
            252.10914611816406,
            252.1089630126953,
            252.10971069335938,
            252.1093292236328,
            252.10934448242188,
            252.109130859375,
            252.10935974121094,
            252.10939025878906,
            252.1090545654297,
            252.10916137695312,
            252.10946655273438,
            252.10923767089844,
            252.1093292236328,
            252.10919189453125,
            252.10914611816406,
            252.10897827148438,
            252.10934448242188,
            252.10928344726562,
            252.10888671875,
            252.10926818847656,
            252.109130859375,
            252.1090087890625,
            252.10934448242188,
            252.10939025878906,
            252.1093292236328,
            252.1091766357422,
            252.109130859375,
            252.1095428466797,
            252.10890197753906,
            252.1095428466797,
            252.109130859375,
            252.10911560058594,
            252.1091766357422,
            252.1088409423828,
            252.10916137695312,
            252.10935974121094,
            252.10928344726562,
            252.10922241210938,
            252.10914611816406,
            252.10922241210938,
            252.10894775390625,
            252.10906982421875,
            252.10914611816406,
            252.10916137695312,
            252.10910034179688,
            252.10916137695312,
            252.10934448242188,
            252.10899353027344,
            252.10928344726562,
            252.10897827148438,
            252.10916137695312,
            252.10928344726562,
            252.1092987060547,
            252.1089324951172,
            252.10914611816406,
            252.1090545654297,
            252.10914611816406,
            252.1090850830078,
            252.10894775390625,
            252.10914611816406,
            252.10911560058594,
            252.1090850830078,
            252.109130859375,
            252.10903930664062,
            252.10890197753906,
            252.109130859375,
            252.10885620117188,
            252.10914611816406,
            252.10926818847656,
            252.10888671875,
            252.109619140625,
            252.10922241210938,
            252.1092529296875,
            252.1099853515625,
            252.10972595214844,
            252.10910034179688,
            252.10935974121094,
            252.1088409423828,
            252.10838317871094,
            252.11212158203125,
        ],
        "rt": [
            1.7180122137069702,
            1.8222843408584595,
            1.838305115699768,
            1.8444031476974487,
            1.8705799579620361,
            1.875998616218567,
            1.8913277387619019,
            1.9020838737487793,
            1.9127358198165894,
            1.9397128820419312,
            1.9451169967651367,
            1.9505127668380737,
            1.955920934677124,
            1.966427206993103,
            1.9718105792999268,
            1.9769750833511353,
            1.9823375940322876,
            1.987752079963684,
            1.9932082891464233,
            1.9986457824707031,
            2.0094456672668457,
            2.019866466522217,
            2.030582904815674,
            2.036003589630127,
            2.0568389892578125,
            2.062201499938965,
            2.0675911903381348,
            2.0834577083587646,
            2.088857650756836,
            2.0939910411834717,
            2.099109649658203,
            2.104536771774292,
            2.1208388805389404,
            2.1262447834014893,
            2.1420176029205322,
            2.152921676635742,
            2.15836763381958,
            2.163788318634033,
            2.169198751449585,
            2.1755259037017822,
            2.180954933166504,
            2.18635892868042,
            2.191038131713867,
            2.1964569091796875,
            2.2018840312957764,
            2.2069132328033447,
            2.21236515045166,
            2.2177650928497314,
            2.2228589057922363,
            2.2283151149749756,
            2.2338151931762695,
            2.239321231842041,
            2.244842052459717,
            2.250317096710205,
            2.255610704421997,
            2.261033535003662,
            2.2665293216705322,
            2.2720251083374023,
            2.2775044441223145,
            2.28295636177063,
            2.288454294204712,
            2.29386043548584,
            2.299298048019409,
            2.304720878601074,
            2.310127019882202,
            2.3155603408813477,
            2.320981025695801,
            2.326420545578003,
            2.33160400390625,
            2.3370935916900635,
            2.3428516387939453,
            2.3483099937438965,
            2.3535475730895996,
            2.3589975833892822,
            2.364443302154541,
            2.3699119091033936,
            2.375347375869751,
            2.3808369636535645,
            2.3862972259521484,
            2.3917577266693115,
            2.397282600402832,
            2.402780294418335,
            2.4081971645355225,
            2.419055461883545,
            2.457223892211914,
            3.3080079555511475,
        ],
        "intensity": [
            34249.71484375,
            28511.658203125,
            41718.13671875,
            33448.546875,
            40190.94140625,
            32525.16015625,
            37058.60546875,
            51132.91015625,
            36473.0546875,
            42659.0859375,
            45187.6171875,
            51186.30078125,
            58456.5859375,
            43299.24609375,
            52062.02734375,
            42501.8671875,
            39734.91015625,
            41848.02734375,
            48979.640625,
            42957.48046875,
            54214.27734375,
            63583.64453125,
            38661.046875,
            47146.54296875,
            36974.3046875,
            37674.35546875,
            37412.4609375,
            47036.44921875,
            32295.888671875,
            39751.12109375,
            47359.0,
            57496.41796875,
            33690.4765625,
            36853.53515625,
            33045.0703125,
            33235.64453125,
            52481.1015625,
            48210.37109375,
            62178.734375,
            73049.2109375,
            52741.03125,
            88225.1953125,
            101593.296875,
            127965.625,
            124079.859375,
            134410.46875,
            148749.0,
            134068.8125,
            141625.515625,
            202721.015625,
            204341.703125,
            172160.484375,
            185859.765625,
            195729.234375,
            216657.453125,
            239248.65625,
            172232.296875,
            195105.046875,
            304761.90625,
            181052.265625,
            222467.5625,
            251571.53125,
            205874.765625,
            224279.0625,
            173697.359375,
            236325.078125,
            153999.28125,
            156835.59375,
            118963.8046875,
            105766.234375,
            103081.484375,
            97180.5625,
            95681.4140625,
            74239.0703125,
            69208.8984375,
            60604.1484375,
            37020.84765625,
            32874.484375,
            24641.875,
            23305.75,
            23413.94140625,
            42582.77734375,
            35980.16796875,
            25743.97265625,
            21777.99609375,
            59454.40234375,
        ],
    }


@pytest.fixture(name="atlas_df")
def fixture_atlas_df(metatlas_dataset):
    return metatlas_dataset.atlas_df
